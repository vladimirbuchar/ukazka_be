// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace EduApi.Migrations
{
    [DbContext(typeof(EduDbContext))]
    [Migration("20200523120633_AlterGetAllCourseTermLectorAddLectorIdRename")]
    partial class AlterGetAllCourseTermLectorAddLectorIdRename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Tables.CodeBook.AddressType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_AddressType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.AnswerMode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cb_AnswerMode");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cb_Country");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_CourseStatus");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.CourseType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_CourseType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.Culture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_Culture");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.GalleryItemType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_GalleryItemType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.License", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CreatePrivateCourse")
                        .HasColumnName("CreatePrivateCourse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumBranch")
                        .HasColumnName("MaximumBranch")
                        .HasColumnType("int");

                    b.Property<int>("MaximumCourse")
                        .HasColumnName("MaximumCourse")
                        .HasColumnType("int");

                    b.Property<int>("MaximumUser")
                        .HasColumnName("MaximumUser")
                        .HasColumnType("int");

                    b.Property<double>("MounthPrice")
                        .HasColumnName("MounthPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OneYearSale")
                        .HasColumnName("OneYearSale")
                        .HasColumnType("float");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<bool>("SendCourseInquiry")
                        .HasColumnName("SendCourseInquiry")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_License");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.NotificationType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cb_NotificationType");
                });

            modelBuilder.Entity("Model.Tables.CodeBook.TimeTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefault")
                        .HasColumnName("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnName("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_TimeTable");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Edu_BankOfQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainBranch")
                        .HasColumnName("IsMainBranch")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Branch");
                });

            modelBuilder.Entity("Model.Tables.Edu.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Category");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Floor")
                        .HasColumnName("Floor")
                        .HasColumnType("int");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCapacity")
                        .HasColumnName("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("BranchId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_ClassRoom");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoursePriceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivateCourse")
                        .HasColumnName("IsPrivateCourse")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentCountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CoursePriceId");

                    b.HasIndex("CourseStatusId");

                    b.HasIndex("CourseTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("StudentCountId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Course");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseLessonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Html")
                        .HasColumnName("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CourseLessonId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseItem");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CourseId");

                    b.ToTable("Edu_CourseLesson");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OldRateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnName("Rate")
                        .HasColumnType("int");

                    b.Property<DateTime>("RateDate")
                        .HasColumnName("RateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("OldRateId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_CourseRate");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTerm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActiveFrom")
                        .HasColumnName("ActiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ActiveTo")
                        .HasColumnName("ActiveTo")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoursePriceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Friday")
                        .HasColumnName("Friday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<bool>("Monday")
                        .HasColumnName("Monday")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegistrationFrom")
                        .HasColumnName("RegistrationFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegistrationTo")
                        .HasColumnName("RegistrationTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Saturday")
                        .HasColumnName("Saturday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("StudentCountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Sunday")
                        .HasColumnName("Sunday")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Thursday")
                        .HasColumnName("Thursday")
                        .HasColumnType("bit");

                    b.Property<Guid?>("TimeFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TimeToId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Tuesday")
                        .HasColumnName("Tuesday")
                        .HasColumnType("bit");

                    b.Property<bool>("Wednesday")
                        .HasColumnName("Wednesday")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("CoursePriceId");

                    b.HasIndex("StudentCountId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TimeFromId");

                    b.HasIndex("TimeToId");

                    b.ToTable("Edu_CourseTerm");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DesiredSuccess")
                        .HasColumnName("DesiredSuccess")
                        .HasColumnType("int");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRandomGenerateQuestion")
                        .HasColumnName("IsRandomGenerateQuestion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionCountInTest")
                        .HasColumnName("QuestionCountInTest")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimeLimit")
                        .HasColumnName("TimeLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_CourseTest");
                });

            modelBuilder.Entity("Model.Tables.Edu.EduEmail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailBodyHtml")
                        .HasColumnName("EmailBodyHtml")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailBodyPlainText")
                        .HasColumnName("EmailBodyPlainText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnName("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHtml")
                        .HasColumnName("IsHtml")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnName("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Cb_Email");
                });

            modelBuilder.Entity("Model.Tables.Edu.Inquiry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactEmail")
                        .HasColumnName("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .HasColumnName("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnName("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Text")
                        .HasColumnName("ContactPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_Inquiry");
                });

            modelBuilder.Entity("Model.Tables.Edu.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Salary")
                        .HasColumnName("Salary")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Job");
                });

            modelBuilder.Entity("Model.Tables.Edu.LectorRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("LectorId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_LectorRate");
                });

            modelBuilder.Entity("Model.Tables.Edu.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AddDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("NotificationTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_Notification");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("CanSendCourseInquiry")
                        .HasColumnName("CanSendCourseInquiry")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ContactInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LicenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("ContactInformationId");

                    b.HasIndex("LicenseId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Organization");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationRole");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRolePermition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermitionIdentificator")
                        .HasColumnName("PermitionIdentificator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationRoleId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_OrganizationRolePermition");
                });

            modelBuilder.Entity("Model.Tables.Edu.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnName("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnName("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Person");
                });

            modelBuilder.Entity("Model.Tables.Edu.Slider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnName("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("Priority")
                        .HasColumnName("Priority")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_Slider");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Finish")
                        .HasColumnName("Finish")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<double>("Score")
                        .HasColumnName("Score")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnName("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("TestCompleted")
                        .HasColumnName("TestCompleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_StudentTestSummary");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AnswerModeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankOfQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Question")
                        .HasColumnName("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AnswerModeId");

                    b.HasIndex("BankOfQuestionId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_TestQuestion");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .HasColumnName("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTrueAnswer")
                        .HasColumnName("IsTrueAnswer")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("TestQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("TestQuestionId");

                    b.ToTable("Edu_TestQuestionAnswer");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestStudentResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseTestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<double>("Result")
                        .HasColumnName("Result")
                        .HasColumnType("float");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTestId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Edu_TestStudentResult");
                });

            modelBuilder.Entity("Model.Tables.Edu.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEmail")
                        .HasColumnName("UserEmail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserPassword")
                        .HasColumnName("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserToken")
                        .HasColumnName("UserToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserEmail")
                        .IsUnique()
                        .HasFilter("[UserEmail] IS NOT NULL");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Edu_User");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasicInformationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BasicInformationId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Edu_UserRole");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Link_CourseCategory");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseLector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserInOrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserInOrganizationId");

                    b.ToTable("Link_CourseLector");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseStudent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseTermId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CourseTermId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Link_CourseStudent");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInOrganization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrganizationRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationRoleId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("Link_UserInOrganization");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("Link_UserInRole");
                });

            modelBuilder.Entity("Model.Tables.Shared.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AddressTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HouseNumber")
                        .HasColumnName("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .HasColumnName("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnName("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZipCode")
                        .HasColumnName("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressTypeId");

                    b.HasIndex("CountryId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_Address");
                });

            modelBuilder.Entity("Model.Tables.Shared.BasicInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnName("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnName("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_BasicInformation");
                });

            modelBuilder.Entity("Model.Tables.Shared.ContactInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WWW")
                        .HasColumnName("WWW")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_ContactInformation");
                });

            modelBuilder.Entity("Model.Tables.Shared.CoursePrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("float");

                    b.Property<int>("Sale")
                        .HasColumnName("Sale")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_CoursePrice");
                });

            modelBuilder.Entity("Model.Tables.Shared.Gallery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasColumnName("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GalleryItemTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("GalleryItemTypeId");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_Gallery");
                });

            modelBuilder.Entity("Model.Tables.Shared.StudentCount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumStudent")
                        .HasColumnName("MaximumStudent")
                        .HasColumnType("int");

                    b.Property<int>("MinimumStudent")
                        .HasColumnName("MinimumStudent")
                        .HasColumnType("int");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("Shared_StudentCount");
                });

            modelBuilder.Entity("Model.Tables.System.DataMigration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasColumnName("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExcelLastModification")
                        .HasColumnName("ExcelLastModification")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExcelName")
                        .HasColumnName("ExcelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FolderLastModification")
                        .HasColumnName("FolderLastModification")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnName("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.ToTable("System_DataMigration");
                });

            modelBuilder.Entity("Model.Tables.System.ObjectHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnName("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .HasColumnName("EventType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChanged")
                        .HasColumnName("IsChanged")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemObject")
                        .HasColumnName("IsSystemObject")
                        .HasColumnType("bit");

                    b.Property<string>("NewValue")
                        .HasColumnName("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnName("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObjectType")
                        .HasColumnName("ObjectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnName("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemIdentificator")
                        .HasColumnName("SystemIdentificator")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SystemIdentificator")
                        .IsUnique()
                        .HasFilter("[SystemIdentificator] IS NOT NULL");

                    b.HasIndex("UserId");

                    b.ToTable("System_ObjectHistory");
                });

            modelBuilder.Entity("Model.Tables.Edu.BankOfQuestion", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("BankOfQuestions")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Branch", b =>
                {
                    b.HasOne("Model.Tables.Shared.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Shared.ContactInformation", "ContactInformation")
                        .WithMany()
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("Branch")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Category", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Category", null)
                        .WithMany("ChildCategory")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("Model.Tables.Edu.ClassRoom", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Branch", null)
                        .WithMany("ClassRoom")
                        .HasForeignKey("BranchId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Course", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Category", null)
                        .WithMany("Course")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Model.Tables.Shared.CoursePrice", "CoursePrice")
                        .WithMany()
                        .HasForeignKey("CoursePriceId");

                    b.HasOne("Model.Tables.CodeBook.CourseStatus", "CourseStatus")
                        .WithMany()
                        .HasForeignKey("CourseStatusId");

                    b.HasOne("Model.Tables.CodeBook.CourseType", "CourseType")
                        .WithMany()
                        .HasForeignKey("CourseTypeId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("Course")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Model.Tables.Shared.StudentCount", "StudentCount")
                        .WithMany()
                        .HasForeignKey("StudentCountId");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseItem", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.CourseLesson", null)
                        .WithMany("CourseItem")
                        .HasForeignKey("CourseLessonId");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseLesson", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Course", null)
                        .WithMany("CourseLesson")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseRate", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Course", null)
                        .WithMany("CourseRate")
                        .HasForeignKey("CourseId");

                    b.HasOne("Model.Tables.Edu.CourseRate", "OldRate")
                        .WithMany()
                        .HasForeignKey("OldRateId");

                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTerm", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.ClassRoom", "ClassRoom")
                        .WithMany()
                        .HasForeignKey("ClassRoomId");

                    b.HasOne("Model.Tables.Edu.Course", null)
                        .WithMany("CourseTerm")
                        .HasForeignKey("CourseId");

                    b.HasOne("Model.Tables.Shared.CoursePrice", "CoursePrice")
                        .WithMany()
                        .HasForeignKey("CoursePriceId");

                    b.HasOne("Model.Tables.Shared.StudentCount", "StudentCount")
                        .WithMany()
                        .HasForeignKey("StudentCountId");

                    b.HasOne("Model.Tables.CodeBook.TimeTable", "TimeFrom")
                        .WithMany()
                        .HasForeignKey("TimeFromId");

                    b.HasOne("Model.Tables.CodeBook.TimeTable", "TimeTo")
                        .WithMany()
                        .HasForeignKey("TimeToId");
                });

            modelBuilder.Entity("Model.Tables.Edu.CourseTest", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Course", null)
                        .WithMany("CourseTest")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Inquiry", b =>
                {
                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Job", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("Job")
                        .HasForeignKey("OrganizationId");
                });

            modelBuilder.Entity("Model.Tables.Edu.LectorRate", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.User", "Lector")
                        .WithMany()
                        .HasForeignKey("LectorId");

                    b.HasOne("Model.Tables.Edu.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Notification", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("Notifications")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Organization", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Shared.ContactInformation", "ContactInformation")
                        .WithMany()
                        .HasForeignKey("ContactInformationId");

                    b.HasOne("Model.Tables.CodeBook.License", "License")
                        .WithMany()
                        .HasForeignKey("LicenseId");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRole", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("Model.Tables.Edu.OrganizationRolePermition", b =>
                {
                    b.HasOne("Model.Tables.Edu.OrganizationRole", "OrganizationRole")
                        .WithMany()
                        .HasForeignKey("OrganizationRoleId");
                });

            modelBuilder.Entity("Model.Tables.Edu.Slider", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("Model.Tables.Edu.StudentTestSummary", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");

                    b.HasOne("Model.Tables.Edu.CourseTest", "CourseTest")
                        .WithMany()
                        .HasForeignKey("CourseTestId");

                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestion", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AnswerMode", "AnswerMode")
                        .WithMany()
                        .HasForeignKey("AnswerModeId");

                    b.HasOne("Model.Tables.Edu.BankOfQuestion", null)
                        .WithMany("TestQuestions")
                        .HasForeignKey("BankOfQuestionId");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestQuestionAnswer", b =>
                {
                    b.HasOne("Model.Tables.Edu.TestQuestion", null)
                        .WithMany("TestQuestionAnswer")
                        .HasForeignKey("TestQuestionId");
                });

            modelBuilder.Entity("Model.Tables.Edu.TestStudentResult", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTest", "CourseTest")
                        .WithMany()
                        .HasForeignKey("CourseTestId");

                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Edu.User", b =>
                {
                    b.HasOne("Model.Tables.Edu.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.HasOne("Model.Tables.Edu.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");
                });

            modelBuilder.Entity("Model.Tables.Edu.UserRole", b =>
                {
                    b.HasOne("Model.Tables.Shared.BasicInformation", "BasicInformation")
                        .WithMany()
                        .HasForeignKey("BasicInformationId");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseCategory", b =>
                {
                    b.HasOne("Model.Tables.Edu.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Model.Tables.Edu.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseLector", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm", "CourseTerm")
                        .WithMany()
                        .HasForeignKey("CourseTermId");

                    b.HasOne("Model.Tables.Link.UserInOrganization", "UserInOrganization")
                        .WithMany()
                        .HasForeignKey("UserInOrganizationId");
                });

            modelBuilder.Entity("Model.Tables.Link.CourseStudent", b =>
                {
                    b.HasOne("Model.Tables.Edu.CourseTerm", "CourseTerm")
                        .WithMany()
                        .HasForeignKey("CourseTermId");

                    b.HasOne("Model.Tables.Link.UserInOrganization", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInOrganization", b =>
                {
                    b.HasOne("Model.Tables.Edu.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Model.Tables.Edu.OrganizationRole", "OrganizationRole")
                        .WithMany()
                        .HasForeignKey("OrganizationRoleId");

                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Model.Tables.Link.UserInRole", b =>
                {
                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("Model.Tables.Edu.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");
                });

            modelBuilder.Entity("Model.Tables.Shared.Address", b =>
                {
                    b.HasOne("Model.Tables.CodeBook.AddressType", "AddressType")
                        .WithMany()
                        .HasForeignKey("AddressTypeId");

                    b.HasOne("Model.Tables.CodeBook.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Model.Tables.Edu.Organization", null)
                        .WithMany("Addresses")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("Model.Tables.Edu.Person", null)
                        .WithMany("PersonAddress")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("Model.Tables.Shared.Gallery", b =>
                {
                    b.HasOne("Model.Tables.Edu.Course", null)
                        .WithMany("Gallery")
                        .HasForeignKey("CourseId");

                    b.HasOne("Model.Tables.CodeBook.GalleryItemType", "GalleryItemType")
                        .WithMany()
                        .HasForeignKey("GalleryItemTypeId");
                });

            modelBuilder.Entity("Model.Tables.System.ObjectHistory", b =>
                {
                    b.HasOne("Model.Tables.Edu.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
